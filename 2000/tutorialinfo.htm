<HTML>
 

<!-- No name, tag or container specified for the define! &lt;define help&gt; for instructions. -->

<HEAD>
  
<title>
    Tutorials - CLUSTER 2000 
   
</title>
<META name="author" content="Webmaster Computer Architecture at University of Rostock">

 
  <META name="description" content="Lehrstuhl Rechnerarchitektur">
  <META name="keywords" content="Rechnerarchitektur, Computer Architecture, Cluster">
</HEAD>
 

<body alink="#ff0000" text="#000000" bgcolor="#FFFFFF" vlink="#551a8b" link="#0000ee">

<A NAME="TOP">

<center>
<P><A HREF="http://www.tu-chemnitz.de/informatik/RA/cluster2000/"><img parsed="yep" alt="[cluster2000]" border="0" parsed="1" src="images/clustermix_s.jpg"></A></P>
<br><br>

<H3>Tutorials</H3></td>
<H4>November 28 th, 2000, Chemnitz, Germany</H4
</P>
<br>


<table border=2 cellspacing=4 cellpadding=4>
<tr>
  <td valign=center align=center><font size=+1>Tutorial</font></td>
  <td valign=center align=center><font size=+1>Presenter(s)</font></td>
  <td valign=center align=center><font size=+1>Title</font></td>
  <td valign=center align=center><font size=+1>Info</font></td>
</tr>
<tr>
  <td align=center> A</td>
  <td>Rob Pennington, David A. Bader,<br>Barney Maccabe, Patricia Kovatch,<br>Stephen L. Scott</td>
  <td><strong>Design and Analysis of High Performance Clusters</strong></td>
  <td align=center valign=center><A href="#pennington"><img parsed="yep" alt="[info_blue]" border="0" height="20" parsed="1" src="images/info_blue.gif" width="21"></A>
<A href="pennington.pdf"><img parsed="yep" alt="[pdf]" border="0" height="23" parsed="1" src="images/pdf.gif" width="20"></A></td>
</tr>
<tr>
  <td align=center>B</td>
  <td>Arvind W. Kiwelekar</td>
  <td><strong>CORBA : As a Cluster Middleware</strong></td>
  <td align=center valign=center><A href="#kiwelekar"><img parsed="yep" alt="[info_blue]" border="0" height="20" parsed="1" src="images/info_blue.gif" width="21"></A>
<A href="kiwelekar.pdf"><img parsed="yep" alt="[pdf]" border="0" height="23" parsed="1" src="images/pdf.gif" width="20"></A></td>
</tr>
<tr>
  <td align=center>C</td>
  <td>Mark Baker, Rajkumar Buyya</td>
  <td><strong>Current and Emerging Trends in Cluster Computing</strong></td>
  <td align=center valign=center><A href="#baker"><img parsed="yep" alt="[info_blue]" border="0" height="20" parsed="1" src="images/info_blue.gif" width="21"></A>
<A href="baker.pdf"><img parsed="yep" alt="[pdf]" border="0" height="23" parsed="1" src="images/pdf.gif" width="20"></A></td>
</tr>
<tr>
  <td align=center>D</td>
  <td>Tim Mattson</td>
  <td><strong>An Introduction to OpenMP and its use on clusters</strong></td>
  <td align=center valign=center><A href="#mattson"><img parsed="yep" alt="[info_blue]" border="0" height="20" parsed="1" src="images/info_blue.gif" width="21"></A>
<A href="mattson.pdf"><img parsed="yep" alt="[pdf]" border="0" height="23" parsed="1" src="images/pdf.gif" width="20"></A></td>
</tr>
<tr>
  <td align=center>E</td>
  <td>Rajkumar Buyya, Mark Baker</td>
  <td><strong>Hot Topics in Cluster Computing and the Grid</strong></td>
  <td align=center valign=center><A href="#buyya"><img parsed="yep" alt="[info_blue]" border="0" height="20" parsed="1" src="images/info_blue.gif" width="21"></A>
<A href="buyya.pdf"><img parsed="yep" alt="[pdf]" border="0" height="23" parsed="1" src="images/pdf.gif" width="20"></A></td>
</tr>
<tr>
  <td align=center>F</td>
  <td>Omer F. Rana</td>
  <td><strong>Implementing Agent Applications in Java:<br>
Using Mobile and Intelligent Agents</strong></td>
  <td align=center valign=center><A href="#rana"><img parsed="yep" alt="[info_blue]" border="0" height="20" parsed="1" src="images/info_blue.gif" width="21"></A>
<A href="rana.pdf"><img parsed="yep" alt="[pdf]" border="0" height="23" parsed="1" src="images/pdf.gif" width="20"></A></td>
</tr>
</table>
</center>

<br><br>
<br><br>

<A NAME="pennington">
<P>
<TABLE BORDER CELLSPACING=5 CELLPADDING=5 COLS=1 BGCOLOR="#CCFFFF" >
<tr><td>
<table border=0>
<tr><td align=center colspan=2><b>Tutorial A</b></td></tr>
<tr><td><strong>Title:</strong></td><td><font color="#0000FF" size=+1>Design and Analysis of High Performance Clusters</font></td></tr>
<tr><td><strong>Presenter:</strong></td><td>Rob Pennington, David A. Bader, Barney Maccabe, Patricia Kovatch, Stephen L. Scott</td></tr>
<tr><td><strong>Abstract:</strong></td><td></td></tr>
<tr><td colspan=2>
The National Computational Science Alliance (the Alliance) has created several production superclusters for scientists and researchers to run a variety of parallel appliations. The goal of this tutorial is to bring together and share the latest information on the state of high-end commodity clusters. The Alliance and others are active in developing and benchmarking applications on both Linux and NT clusters. Presenters are all active in the development and management of these systems.
<br><br>
The goal of these clusters is to provide easy-to-use high performance computing systems at reasonable prices. Superclusters are large scale clusters built from commodity parts and high performance interconnects.
<br><br>
We will discuss the details on the design, implementation and management of these systems. System monitoring and management tools are becoming more sophisticated and will be demonstrated. A wide variety of applications and community codes run on these superclusters. We will examine several of these
applications and include details on porting and application development tools on both NT and Linux. We will also discuss how to use tools to tune the system and applications for optimal performance. Within the Alliance, the Virtual Machine Room (VMR) provides a sophisticated interface to the national computational grid infrastructure. These Alliance clusters are linked together through the VMR, allowing easy and uniform access to these resources. Using this interface, scientists and researchers can submit and monitor their jobs through a common interface from geographically distributed locations.
<br><br>
Many research and development efforts are enhancing superclusters. Several of these trends such as IA-64 and parallel file systems will be discussed.
<br><A HREF="#TOP"><img parsed="yep" align="right" alt="[top_blue]" border="0" height="10" parsed="1" src="images/top_blue.gif" width="9"></A>
</td></tr>
</table>

</td></tr>
</TABLE>
</P>

<P><br></P>

<A NAME="kiwelekar">
<P>
<TABLE BORDER CELLSPACING=5 CELLPADDING=5 COLS=1 BGCOLOR="#CCFFFF" >
<tr><td>
<table border=0>
<tr><td align=center colspan=2><b>Tutorial B</b></td></tr>
<tr><td><strong>Title:</strong></td><td><font color="#0000FF" size=+1>CORBA : As a Cluster Middleware</font></td></tr>
<tr><td><strong>Presenter:</strong></td><td>Arvind W. Kiwelekar</td></tr>
<tr><td><strong>Abstract:</strong></td><td></td></tr>
<tr><td colspan=2>
In today's commercial and academic environments, the availability of high performance desktop workstations and servers has become more and more commonplace. In these environments, parallel processing is provided by squeezing the most out of available computer resources. This type of environment is commonly referred to as a workstation cluster. A cluster can be defined as a collection of computers on a network that can function as a single computing resource. Clustering software provides mechanisms to effectively control job and system resources, to load balance across the network, and to exploit idle CPU cycles. A heterogeneous cluster consists of some number of computers of different architectures running different operating systems. To be useful in today's open computing environments, a cluster system must support many different architectures and operating systems.
<br><br>
Common Object Resource Broker Architecture (CORBA) is the standard based on Object Oriented (OO) model supporting application software development in distributed and heterogeneous environment. The main objective of CORBA is to provide transparency at three different levels, i.e. Network, Operating System and Programming language. To reap the benefits of OO and Client Server (C/S) model, CORBA combines both technologies. One of the useful aspects of CORBA is that it applies equally across the entire market segment, such as, Finance, Telecommunication, Education, Transportation and E-Commerce. With the growth of Internet and WWW, CORBA is gaining mainstream appeal. as a Middleware. The tutorial attempts to combine the two powerful concepts i.e. CORBA and clustering in order to develop heterogeneous cluster.
<br><br>
The proposed tutorial, evaluates policies and mechanisms for supporting CORBA as a middleware for heterogeneous cluster. First, the tutorial reviews CORBA as middleware for distributed object computing. The requirement and necessity of the cluster middleware, in a hetrogeneous cluster, is then discussed. Third, the tutorial highlights the limitations of the CORBA as a cluster middleware and specifies how to overcome it. The tutorial,defines new facilities and services reqired to be added needed for managing a heterogeneous cluster. The tutorial concludes by giving a prototype for cluster middleware based on CORBA for heterogeneous cluster.
<br><A HREF="#TOP"><img parsed="yep" align="right" alt="[top_blue]" border="0" height="10" parsed="1" src="images/top_blue.gif" width="9"></A>
</td></tr>
</table>

</td></tr>
</TABLE>
</P>

<P><br></P>

<A NAME="buyya">
<P>
<TABLE BORDER CELLSPACING=5 CELLPADDING=5 COLS=1 BGCOLOR="#CCFFFF" >
<tr><td>
<table border=0>
<tr><td align=center colspan=2><b>Tutorial C</b></td></tr>
<tr><td><strong>Title:</strong></td><td><font color="#0000FF" size=+1>Current and Emerging Trends in Cluster Computing</font></td></tr>
<tr><td><strong>Presenters:</strong></td><td>Rajkumar Buyya, Mark Baker</td></tr>
<tr><td><strong>Abstract:</strong></td><td></td></tr>
<tr><td colspan=2>
The growing popularity of the Internet along with the availability of powerful computers and high-speed networks as low-cost commodity components is changing the way we do computing. In addition, the emergence of two new computing paradigms, "cluster computing" and "global computing" (grid computing), is making developers rethink the way they design and implement their applications. The emerging technologies are enabling the coupling of a wide variety of geographically distributed resources such as desktop computers, clusters, storage systems, data sources, and scientific instruments, and allows them to be used as a single unified resource and thus forms what is popularly known as "computational grids". In this tutorial we raise a number of open challenges that cluster computing and the grid researchers and developers need to address.
<br><A HREF="#TOP"><img parsed="yep" align="right" alt="[top_blue]" border="0" height="10" parsed="1" src="images/top_blue.gif" width="9"></A>
</td></tr>
</table>

</td></tr>
</TABLE>
</P>

<P><br></P>

<A NAME="mattson">
<P>
<TABLE BORDER CELLSPACING=5 CELLPADDING=5 COLS=1 BGCOLOR="#CCFFFF" >
<tr><td>
<table border=0>
<tr><td align=center colspan=2><b>Tutorial D</b></td></tr>
<tr><td><strong>Title:</strong></td><td><font color="#0000FF" size=+1>An Introduction to OpenMP and its use on clusters</font></td></tr>
<tr><td><strong>Presenter:</strong></td><td>Tim Mattson</td></tr>
<tr><td><strong>Abstract:</strong></td><td></td></tr>
<tr><td colspan=2>
OpenMP is an industry-standard API for programming shared memory computers. It is available on most if not all commercially available shared memory computers. 
<br><br>
With OpenMP, you direct the compiler to create multi-threaded blocks of code by adding compiler directives to your program.  It is easy to use and in many cases supports the incremental addition of parallelism to a program.
<br><br>
So why should a shared memory API such as OpenMP be of interest to the cluster computing community?  There are two reasons. First, many clusters are built from shared memory nodes. OpenMP can be used to exploit parallelism on a node while a distributed memory API is used between nodes. Second, OpenMP is evolving to address non-uniform memory architecture (NUMA) computers.  A cluster running some sort of distributed shared memory (DSM) is an extreme case of  NUMA.  Hence, in some cases, you can program a cluster using OpenMP.
<br><br>
This tutorial will consist of three modules.  In the first module, we will introduce OpenMP. We will cover its history, the API itself, and the infrastructure in place to make sure it evolves to meet the changing needs of parallel programmers.
<br><br>
In the second module, we will discuss how to use OpenMP and MPI together to program clusters of shared memory computers.  Some simple examples will be giving to show the rules that must be followed to safely mix the two programming models.
<br><br>
Finally, we will discuss some of the ways OpenMP might evolve to support programs running across the nodes of a cluster.
<br><A HREF="#TOP"><img parsed="yep" align="right" alt="[top_blue]" border="0" height="10" parsed="1" src="images/top_blue.gif" width="9"></A>
</td></tr>
</table>

</td></tr>
</TABLE>
</P>

<P><br></P>

<A NAME="baker">
<P>
<TABLE BORDER CELLSPACING=5 CELLPADDING=5 COLS=1 BGCOLOR="#CCFFFF" >
<tr><td>
<table border=0>
<tr><td align=center colspan=2><b>Tutorial E</b></td></tr>
<tr><td><strong>Title:</strong></td><td><font color="#0000FF" size=+1>Hot Topics in Cluster Computing and the Grid</font></td></tr>
<tr><td><strong>Presenters:</strong></td><td>Mark Baker, Rajkumar Buyya</td></tr>
<tr><td><strong>Abstract:</strong></td><td></td></tr>
<tr><td colspan=2>
The availability of high-speed networks and increasingly powerful commodity microprocessors are making clusters of computer an ever more pervasive technology. Clusters consisting of commodity-of-the-shelf (COTS) hardware components as well as commonly used and freely available software are being found in all organisations where high-performance or availability computing is required. 

The commercial success of clusters has pushed them into mainstream general purpose computing. This necessitates the need for a software tools and techniques that allows one to manage cluster resources effectively in a manner that is acceptable to majority of users. In this tutorial, we discuss current and emerging trends in cluster computing. In particular we cover cluster technologies in the areas of architectures, networking, single system image, management and application tools. We then move onto talk about four deployed cluster systems that are being used in commerce, industry and research environments. Finally, based on our experience, we summarise our findings, drawing a number of conclusions about current clusters and then briefly discuss emerging technology trends and how these will influence clusters of the future.
<br><A HREF="#TOP"><img parsed="yep" align="right" alt="[top_blue]" border="0" height="10" parsed="1" src="images/top_blue.gif" width="9"></A>
</td></tr>
</table>

</td></tr>
</TABLE>
</P>

<P><br></P>

<A NAME="rana">
<P>
<TABLE BORDER CELLSPACING=5 CELLPADDING=5 COLS=1 BGCOLOR="#CCFFFF" >
<tr><td>
<table border=0>
<tr><td align=center colspan=2><b>Tutorial F</b></td></tr>
<tr><td><strong>Title:</strong></td><td><font color="#0000FF" size=+1>Implementing Agent Applications in Java:<br>
Using Mobile and Intelligent Agents</font></td></tr>
<tr><td><strong>Presenter:</strong></td><td>Omer F. Rana</td></tr>
<tr><td><strong>Abstract:</strong></td><td></td></tr>
<tr><td colspan=2>
Agents are Intelligent software components that act autonomously on the behalf of users, can analyse and access a diverse range of information, can react to changes in their environment, and can cooperate and coordinate their activities to complete a goal. Such components may be distributed across a network, and may work seamlessly to perform this goal. The availability of programming languages such as Java and object systems like CORBA, provide features that are conducive to the use of agents in application development, due to the availability of specialised class libraries (such as networking) and interfaces to standard services, such as persistence, life-cycle support, match-making, amongst others. This tutorial identifies common features between object orientation and multi-agent systems, and uses this as a backdrop to study implementation approaches which utilise objects with behaviour, and objects that can migrate autonomously based on changes in their operating environments. 
<br><A HREF="#TOP"><img parsed="yep" align="right" alt="[top_blue]" border="0" height="10" parsed="1" src="images/top_blue.gif" width="9"></A>
</td></tr>
</table>

</td></tr>
</TABLE>
</P>

<br><br>
<br><br>
<P>

<strong>Tutorial chair:</strong><br><br>
Prof. Dr. D. Tavangarian<br>
University of Rostock<br>
<A HREF="http://wwwtec.informatik.uni-rostock.de">Department of Computer Science</A><br>
Albert-Einstein-Str. 21<br>
D-18059 Rostock / Germany<br>
Phone: (+49) 381-498 33 85<br>
Fax: (+49) 381-498 3440<br>
Email: <A HREF="mailto:Djamshid.Tavangarian@informatik.uni-rostock.de">Djamshid.Tavangarian@informatik.uni-rostock.de</A><br>
Web: <A HREF="http://wwwtec.informatik.uni-rostock.de/RA/cluster2000/">http://wwwtec.informatik.uni-rostock.de/RA/cluster2000/</A><br>
<br><br>
</P>

  <HR>
  <font size=-1>
  <A href="mailto:wwwra@informatik.uni-rostock.de"><em>wwwra</em></A>,
    University of Rostock, Department of Computer Science, 
    Institute of Technische Informatik<br>
    <em>last  modified 12. 
    September 2000</em>
 
 
</BODY>
 
</HTML>
